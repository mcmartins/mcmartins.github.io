/* gap-lint v1.0.0, Manuel Martins - Generated on 26-10-2016 */
function ParserATNSimulator(parser,atn,decisionToDFA,sharedContextCache){return ATNSimulator.call(this,atn,sharedContextCache),this.parser=parser,this.decisionToDFA=decisionToDFA,this.predictionMode=PredictionMode.LL,this._input=null,this._startIndex=0,this._outerContext=null,this._dfa=null,this.mergeCache=null,this}var Utils=require("./../Utils"),Set=Utils.Set,BitSet=Utils.BitSet,DoubleDict=Utils.DoubleDict,ATN=require("./ATN").ATN,ATNConfig=require("./ATNConfig").ATNConfig,ATNConfigSet=require("./ATNConfigSet").ATNConfigSet,Token=require("./../Token").Token,DFAState=require("./../dfa/DFAState").DFAState,PredPrediction=require("./../dfa/DFAState").PredPrediction,ATNSimulator=require("./ATNSimulator").ATNSimulator,PredictionMode=require("./PredictionMode").PredictionMode,RuleContext=require("./../RuleContext").RuleContext,ParserRuleContext=require("./../ParserRuleContext").ParserRuleContext,SemanticContext=require("./SemanticContext").SemanticContext,StarLoopEntryState=require("./ATNState").StarLoopEntryState,RuleStopState=require("./ATNState").RuleStopState,PredictionContext=require("./../PredictionContext").PredictionContext,Interval=require("./../IntervalSet").Interval,Transitions=require("./Transition"),Transition=Transitions.Transition,SetTransition=Transitions.SetTransition,NotSetTransition=Transitions.NotSetTransition,RuleTransition=Transitions.RuleTransition,ActionTransition=Transitions.ActionTransition,NoViableAltException=require("./../error/Errors").NoViableAltException,SingletonPredictionContext=require("./../PredictionContext").SingletonPredictionContext,predictionContextFromRuleContext=require("./../PredictionContext").predictionContextFromRuleContext;ParserATNSimulator.prototype=Object.create(ATNSimulator.prototype),ParserATNSimulator.prototype.constructor=ParserATNSimulator,ParserATNSimulator.prototype.debug=!1,ParserATNSimulator.prototype.debug_list_atn_decisions=!1,ParserATNSimulator.prototype.dfa_debug=!1,ParserATNSimulator.prototype.retry_debug=!1,ParserATNSimulator.prototype.reset=function(){},ParserATNSimulator.prototype.adaptivePredict=function(input,decision,outerContext){(this.debug||this.debug_list_atn_decisions)&&console.log("adaptivePredict decision "+decision+" exec LA(1)=="+this.getLookaheadName(input)+" line "+input.LT(1).line+":"+input.LT(1).column),this._input=input,this._startIndex=input.index,this._outerContext=outerContext;var dfa=this.decisionToDFA[decision];this._dfa=dfa;var m=input.mark(),index=input.index;try{var s0;if(s0=dfa.precedenceDfa?dfa.getPrecedenceStartState(this.parser.getPrecedence()):dfa.s0,null===s0){null===outerContext&&(outerContext=RuleContext.EMPTY),(this.debug||this.debug_list_atn_decisions)&&console.log("predictATN decision "+dfa.decision+" exec LA(1)=="+this.getLookaheadName(input)+", outerContext="+outerContext.toString(this.parser.ruleNames)),!dfa.precedenceDfa&&dfa.atnStartState instanceof StarLoopEntryState&&dfa.atnStartState.precedenceRuleDecision&&dfa.setPrecedenceDfa(!0);var fullCtx=!1,s0_closure=this.computeStartState(dfa.atnStartState,RuleContext.EMPTY,fullCtx);dfa.precedenceDfa?(s0_closure=this.applyPrecedenceFilter(s0_closure),s0=this.addDFAState(dfa,new DFAState(null,s0_closure)),dfa.setPrecedenceStartState(this.parser.getPrecedence(),s0)):(s0=this.addDFAState(dfa,new DFAState(null,s0_closure)),dfa.s0=s0)}var alt=this.execATN(dfa,s0,input,index,outerContext);return this.debug&&console.log("DFA after predictATN: "+dfa.toString(this.parser.literalNames)),alt}finally{this._dfa=null,this.mergeCache=null,input.seek(index),input.release(m)}},ParserATNSimulator.prototype.execATN=function(dfa,s0,input,startIndex,outerContext){(this.debug||this.debug_list_atn_decisions)&&console.log("execATN decision "+dfa.decision+" exec LA(1)=="+this.getLookaheadName(input)+" line "+input.LT(1).line+":"+input.LT(1).column);var alt,previousD=s0;this.debug&&console.log("s0 = "+s0);for(var t=input.LA(1);;){var D=this.getExistingTargetState(previousD,t);if(null===D&&(D=this.computeTargetState(dfa,previousD,t)),D===ATNSimulator.ERROR){var e=this.noViableAlt(input,outerContext,previousD.configs,startIndex);if(input.seek(startIndex),alt=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs,outerContext),alt!==ATN.INVALID_ALT_NUMBER)return alt;throw e}if(D.requiresFullContext&&this.predictionMode!==PredictionMode.SLL){var conflictingAlts=null;if(null!==D.predicates){this.debug&&console.log("DFA state has preds in DFA sim LL failover");var conflictIndex=input.index;if(conflictIndex!==startIndex&&input.seek(startIndex),conflictingAlts=this.evalSemanticContext(D.predicates,outerContext,!0),1===conflictingAlts.length)return this.debug&&console.log("Full LL avoided"),conflictingAlts.minValue();conflictIndex!==startIndex&&input.seek(conflictIndex)}this.dfa_debug&&console.log("ctx sensitive state "+outerContext+" in "+D);var fullCtx=!0,s0_closure=this.computeStartState(dfa.atnStartState,outerContext,fullCtx);return this.reportAttemptingFullContext(dfa,conflictingAlts,D.configs,startIndex,input.index),alt=this.execATNWithFullContext(dfa,D,s0_closure,input,startIndex,outerContext)}if(D.isAcceptState){if(null===D.predicates)return D.prediction;var stopIndex=input.index;input.seek(startIndex);var alts=this.evalSemanticContext(D.predicates,outerContext,!0);if(0===alts.length)throw this.noViableAlt(input,outerContext,D.configs,startIndex);return 1===alts.length?alts.minValue():(this.reportAmbiguity(dfa,D,startIndex,stopIndex,!1,alts,D.configs),alts.minValue())}previousD=D,t!==Token.EOF&&(input.consume(),t=input.LA(1))}},ParserATNSimulator.prototype.getExistingTargetState=function(previousD,t){var edges=previousD.edges;return null===edges?null:edges[t+1]||null},ParserATNSimulator.prototype.computeTargetState=function(dfa,previousD,t){var reach=this.computeReachSet(previousD.configs,t,!1);if(null===reach)return this.addDFAEdge(dfa,previousD,t,ATNSimulator.ERROR),ATNSimulator.ERROR;var D=new DFAState(null,reach),predictedAlt=this.getUniqueAlt(reach);if(this.debug){var altSubSets=PredictionMode.getConflictingAltSubsets(reach);console.log("SLL altSubSets="+Utils.arrayToString(altSubSets)+", previous="+previousD.configs+", configs="+reach+", predict="+predictedAlt+", allSubsetsConflict="+PredictionMode.allSubsetsConflict(altSubSets)+", conflictingAlts="+this.getConflictingAlts(reach))}return predictedAlt!==ATN.INVALID_ALT_NUMBER?(D.isAcceptState=!0,D.configs.uniqueAlt=predictedAlt,D.prediction=predictedAlt):PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode,reach)&&(D.configs.conflictingAlts=this.getConflictingAlts(reach),D.requiresFullContext=!0,D.isAcceptState=!0,D.prediction=D.configs.conflictingAlts.minValue()),D.isAcceptState&&D.configs.hasSemanticContext&&(this.predicateDFAState(D,this.atn.getDecisionState(dfa.decision)),null!==D.predicates&&(D.prediction=ATN.INVALID_ALT_NUMBER)),D=this.addDFAEdge(dfa,previousD,t,D)},ParserATNSimulator.prototype.predicateDFAState=function(dfaState,decisionState){var nalts=decisionState.transitions.length,altsToCollectPredsFrom=this.getConflictingAltsOrUniqueAlt(dfaState.configs),altToPred=this.getPredsForAmbigAlts(altsToCollectPredsFrom,dfaState.configs,nalts);null!==altToPred?(dfaState.predicates=this.getPredicatePredictions(altsToCollectPredsFrom,altToPred),dfaState.prediction=ATN.INVALID_ALT_NUMBER):dfaState.prediction=altsToCollectPredsFrom.minValue()},ParserATNSimulator.prototype.execATNWithFullContext=function(dfa,D,s0,input,startIndex,outerContext){(this.debug||this.debug_list_atn_decisions)&&console.log("execATNWithFullContext "+s0);var fullCtx=!0,foundExactAmbig=!1,reach=null,previous=s0;input.seek(startIndex);for(var t=input.LA(1),predictedAlt=-1;;){if(reach=this.computeReachSet(previous,t,fullCtx),null===reach){var e=this.noViableAlt(input,outerContext,previous,startIndex);input.seek(startIndex);var alt=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous,outerContext);if(alt!==ATN.INVALID_ALT_NUMBER)return alt;throw e}var altSubSets=PredictionMode.getConflictingAltSubsets(reach);if(this.debug&&console.log("LL altSubSets="+altSubSets+", predict="+PredictionMode.getUniqueAlt(altSubSets)+", resolvesToJustOneViableAlt="+PredictionMode.resolvesToJustOneViableAlt(altSubSets)),reach.uniqueAlt=this.getUniqueAlt(reach),reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER){predictedAlt=reach.uniqueAlt;break}if(this.predictionMode!==PredictionMode.LL_EXACT_AMBIG_DETECTION){if(predictedAlt=PredictionMode.resolvesToJustOneViableAlt(altSubSets),predictedAlt!==ATN.INVALID_ALT_NUMBER)break}else if(PredictionMode.allSubsetsConflict(altSubSets)&&PredictionMode.allSubsetsEqual(altSubSets)){foundExactAmbig=!0,predictedAlt=PredictionMode.getSingleViableAlt(altSubSets);break}previous=reach,t!==Token.EOF&&(input.consume(),t=input.LA(1))}return reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER?(this.reportContextSensitivity(dfa,predictedAlt,reach,startIndex,input.index),predictedAlt):(this.reportAmbiguity(dfa,D,startIndex,input.index,foundExactAmbig,null,reach),predictedAlt)},ParserATNSimulator.prototype.computeReachSet=function(closure,t,fullCtx){this.debug&&console.log("in computeReachSet, starting closure: "+closure),null===this.mergeCache&&(this.mergeCache=new DoubleDict);for(var intermediate=new ATNConfigSet(fullCtx),skippedStopStates=null,i=0;i<closure.items.length;i++){var c=closure.items[i];if(this.debug&&console.log("testing "+this.getTokenName(t)+" at "+c),c.state instanceof RuleStopState)(fullCtx||t===Token.EOF)&&(null===skippedStopStates&&(skippedStopStates=[]),skippedStopStates.push(c),this.debug&&console.log("added "+c+" to skippedStopStates"));else for(var j=0;j<c.state.transitions.length;j++){var trans=c.state.transitions[j],target=this.getReachableTarget(trans,t);if(null!==target){var cfg=new ATNConfig({state:target},c);intermediate.add(cfg,this.mergeCache),this.debug&&console.log("added "+cfg+" to intermediate")}}}var reach=null;if(null===skippedStopStates&&t!==Token.EOF&&(1===intermediate.items.length?reach=intermediate:this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER&&(reach=intermediate)),null===reach){reach=new ATNConfigSet(fullCtx);for(var closureBusy=new Set,treatEofAsEpsilon=t===Token.EOF,k=0;k<intermediate.items.length;k++)this.closure(intermediate.items[k],reach,closureBusy,!1,fullCtx,treatEofAsEpsilon)}if(t===Token.EOF&&(reach=this.removeAllConfigsNotInRuleStopState(reach,reach===intermediate)),!(null===skippedStopStates||fullCtx&&PredictionMode.hasConfigInRuleStopState(reach)))for(var l=0;l<skippedStopStates.length;l++)reach.add(skippedStopStates[l],this.mergeCache);return 0===reach.items.length?null:reach},ParserATNSimulator.prototype.removeAllConfigsNotInRuleStopState=function(configs,lookToEndOfRule){if(PredictionMode.allConfigsInRuleStopStates(configs))return configs;for(var result=new ATNConfigSet(configs.fullCtx),i=0;i<configs.items.length;i++){var config=configs.items[i];if(config.state instanceof RuleStopState)result.add(config,this.mergeCache);else if(lookToEndOfRule&&config.state.epsilonOnlyTransitions){var nextTokens=this.atn.nextTokens(config.state);if(nextTokens.contains(Token.EPSILON)){var endOfRuleState=this.atn.ruleToStopState[config.state.ruleIndex];result.add(new ATNConfig({state:endOfRuleState},config),this.mergeCache)}}}return result},ParserATNSimulator.prototype.computeStartState=function(p,ctx,fullCtx){for(var initialContext=predictionContextFromRuleContext(this.atn,ctx),configs=new ATNConfigSet(fullCtx),i=0;i<p.transitions.length;i++){var target=p.transitions[i].target,c=new ATNConfig({state:target,alt:i+1,context:initialContext},null),closureBusy=new Set;this.closure(c,configs,closureBusy,!0,fullCtx,!1)}return configs},ParserATNSimulator.prototype.applyPrecedenceFilter=function(configs){for(var config,statesFromAlt1=[],configSet=new ATNConfigSet(configs.fullCtx),i=0;i<configs.items.length;i++)if(config=configs.items[i],1===config.alt){var updatedContext=config.semanticContext.evalPrecedence(this.parser,this._outerContext);null!==updatedContext&&(statesFromAlt1[config.state.stateNumber]=config.context,updatedContext!==config.semanticContext?configSet.add(new ATNConfig({semanticContext:updatedContext},config),this.mergeCache):configSet.add(config,this.mergeCache))}for(i=0;i<configs.items.length;i++)if(config=configs.items[i],1!==config.alt){if(!config.precedenceFilterSuppressed){var context=statesFromAlt1[config.state.stateNumber]||null;if(null!==context&&context.equals(config.context))continue}configSet.add(config,this.mergeCache)}return configSet},ParserATNSimulator.prototype.getReachableTarget=function(trans,ttype){return trans.matches(ttype,0,this.atn.maxTokenType)?trans.target:null},ParserATNSimulator.prototype.getPredsForAmbigAlts=function(ambigAlts,configs,nalts){for(var altToPred=[],i=0;i<configs.items.length;i++){var c=configs.items[i];ambigAlts.contains(c.alt)&&(altToPred[c.alt]=SemanticContext.orContext(altToPred[c.alt]||null,c.semanticContext))}var nPredAlts=0;for(i=1;i<nalts+1;i++){var pred=altToPred[i]||null;null===pred?altToPred[i]=SemanticContext.NONE:pred!==SemanticContext.NONE&&(nPredAlts+=1)}return 0===nPredAlts&&(altToPred=null),this.debug&&console.log("getPredsForAmbigAlts result "+Utils.arrayToString(altToPred)),altToPred},ParserATNSimulator.prototype.getPredicatePredictions=function(ambigAlts,altToPred){for(var pairs=[],containsPredicate=!1,i=1;i<altToPred.length;i++){var pred=altToPred[i];null!==ambigAlts&&ambigAlts.contains(i)&&pairs.push(new PredPrediction(pred,i)),pred!==SemanticContext.NONE&&(containsPredicate=!0)}return containsPredicate?pairs:null},ParserATNSimulator.prototype.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule=function(configs,outerContext){var cfgs=this.splitAccordingToSemanticValidity(configs,outerContext),semValidConfigs=cfgs[0],semInvalidConfigs=cfgs[1],alt=this.getAltThatFinishedDecisionEntryRule(semValidConfigs);return alt!==ATN.INVALID_ALT_NUMBER?alt:semInvalidConfigs.items.length>0&&(alt=this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs),alt!==ATN.INVALID_ALT_NUMBER)?alt:ATN.INVALID_ALT_NUMBER},ParserATNSimulator.prototype.getAltThatFinishedDecisionEntryRule=function(configs){for(var alts=[],i=0;i<configs.items.length;i++){var c=configs.items[i];(c.reachesIntoOuterContext>0||c.state instanceof RuleStopState&&c.context.hasEmptyPath())&&alts.indexOf(c.alt)<0&&alts.push(c.alt)}return 0===alts.length?ATN.INVALID_ALT_NUMBER:Math.min.apply(null,alts)},ParserATNSimulator.prototype.splitAccordingToSemanticValidity=function(configs,outerContext){for(var succeeded=new ATNConfigSet(configs.fullCtx),failed=new ATNConfigSet(configs.fullCtx),i=0;i<configs.items.length;i++){var c=configs.items[i];if(c.semanticContext!==SemanticContext.NONE){var predicateEvaluationResult=c.semanticContext.evaluate(this.parser,outerContext);predicateEvaluationResult?succeeded.add(c):failed.add(c)}else succeeded.add(c)}return[succeeded,failed]},ParserATNSimulator.prototype.evalSemanticContext=function(predPredictions,outerContext,complete){for(var predictions=new BitSet,i=0;i<predPredictions.length;i++){var pair=predPredictions[i];if(pair.pred!==SemanticContext.NONE){var predicateEvaluationResult=pair.pred.evaluate(this.parser,outerContext);if((this.debug||this.dfa_debug)&&console.log("eval pred "+pair+"="+predicateEvaluationResult),predicateEvaluationResult&&((this.debug||this.dfa_debug)&&console.log("PREDICT "+pair.alt),predictions.add(pair.alt),!complete))break}else if(predictions.add(pair.alt),!complete)break}return predictions},ParserATNSimulator.prototype.closure=function(config,configs,closureBusy,collectPredicates,fullCtx,treatEofAsEpsilon){var initialDepth=0;this.closureCheckingStopState(config,configs,closureBusy,collectPredicates,fullCtx,initialDepth,treatEofAsEpsilon)},ParserATNSimulator.prototype.closureCheckingStopState=function(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon){if(this.debug&&(console.log("closure("+config.toString(this.parser,!0)+")"),console.log("configs("+configs.toString()+")"),config.reachesIntoOuterContext>50))throw"problem";if(config.state instanceof RuleStopState){if(!config.context.isEmpty()){for(var i=0;i<config.context.length;i++)if(config.context.getReturnState(i)!==PredictionContext.EMPTY_RETURN_STATE){var returnState=this.atn.states[config.context.getReturnState(i)],newContext=config.context.getParent(i),parms={state:returnState,alt:config.alt,context:newContext,semanticContext:config.semanticContext},c=new ATNConfig(parms,null);c.reachesIntoOuterContext=config.reachesIntoOuterContext,this.closureCheckingStopState(c,configs,closureBusy,collectPredicates,fullCtx,depth-1,treatEofAsEpsilon)}else{if(fullCtx){configs.add(new ATNConfig({state:config.state,context:PredictionContext.EMPTY},config),this.mergeCache);continue}this.debug&&console.log("FALLING off rule "+this.getRuleName(config.state.ruleIndex)),this.closure_(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon)}return}if(fullCtx)return void configs.add(config,this.mergeCache);this.debug&&console.log("FALLING off rule "+this.getRuleName(config.state.ruleIndex))}this.closure_(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon)},ParserATNSimulator.prototype.closure_=function(config,configs,closureBusy,collectPredicates,fullCtx,depth,treatEofAsEpsilon){var p=config.state;p.epsilonOnlyTransitions||configs.add(config,this.mergeCache);for(var i=0;i<p.transitions.length;i++){var t=p.transitions[i],continueCollecting=collectPredicates&&!(t instanceof ActionTransition),c=this.getEpsilonTarget(config,t,continueCollecting,0===depth,fullCtx,treatEofAsEpsilon);if(null!==c){if(!t.isEpsilon&&closureBusy.add(c)!==c)continue;var newDepth=depth;if(config.state instanceof RuleStopState){if(closureBusy.add(c)!==c)continue;null!==this._dfa&&this._dfa.precedenceDfa&&t.outermostPrecedenceReturn===this._dfa.atnStartState.ruleIndex&&(c.precedenceFilterSuppressed=!0),c.reachesIntoOuterContext+=1,configs.dipsIntoOuterContext=!0,newDepth-=1,this.debug&&console.log("dips into outer ctx: "+c)}else t instanceof RuleTransition&&newDepth>=0&&(newDepth+=1);this.closureCheckingStopState(c,configs,closureBusy,continueCollecting,fullCtx,newDepth,treatEofAsEpsilon)}}},ParserATNSimulator.prototype.getRuleName=function(index){return null!==this.parser&&index>=0?this.parser.ruleNames[index]:"<rule "+index+">"},ParserATNSimulator.prototype.getEpsilonTarget=function(config,t,collectPredicates,inContext,fullCtx,treatEofAsEpsilon){switch(t.serializationType){case Transition.RULE:return this.ruleTransition(config,t);case Transition.PRECEDENCE:return this.precedenceTransition(config,t,collectPredicates,inContext,fullCtx);case Transition.PREDICATE:return this.predTransition(config,t,collectPredicates,inContext,fullCtx);case Transition.ACTION:return this.actionTransition(config,t);case Transition.EPSILON:return new ATNConfig({state:t.target},config);case Transition.ATOM:case Transition.RANGE:case Transition.SET:return treatEofAsEpsilon&&t.matches(Token.EOF,0,1)?new ATNConfig({state:t.target},config):null;default:return null}},ParserATNSimulator.prototype.actionTransition=function(config,t){return this.debug&&console.log("ACTION edge "+t.ruleIndex+":"+t.actionIndex),new ATNConfig({state:t.target},config)},ParserATNSimulator.prototype.precedenceTransition=function(config,pt,collectPredicates,inContext,fullCtx){this.debug&&(console.log("PRED (collectPredicates="+collectPredicates+") "+pt.precedence+">=_p, ctx dependent=true"),null!==this.parser&&console.log("context surrounding pred is "+Utils.arrayToString(this.parser.getRuleInvocationStack())));var c=null;if(collectPredicates&&inContext)if(fullCtx){var currentPosition=this._input.index;this._input.seek(this._startIndex);var predSucceeds=pt.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(currentPosition),predSucceeds&&(c=new ATNConfig({state:pt.target},config))}else newSemCtx=SemanticContext.andContext(config.semanticContext,pt.getPredicate()),c=new ATNConfig({state:pt.target,semanticContext:newSemCtx},config);else c=new ATNConfig({state:pt.target},config);return this.debug&&console.log("config from pred transition="+c),c},ParserATNSimulator.prototype.predTransition=function(config,pt,collectPredicates,inContext,fullCtx){this.debug&&(console.log("PRED (collectPredicates="+collectPredicates+") "+pt.ruleIndex+":"+pt.predIndex+", ctx dependent="+pt.isCtxDependent),null!==this.parser&&console.log("context surrounding pred is "+Utils.arrayToString(this.parser.getRuleInvocationStack())));var c=null;if(collectPredicates&&(pt.isCtxDependent&&inContext||!pt.isCtxDependent))if(fullCtx){var currentPosition=this._input.index;this._input.seek(this._startIndex);var predSucceeds=pt.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(currentPosition),predSucceeds&&(c=new ATNConfig({state:pt.target},config))}else{var newSemCtx=SemanticContext.andContext(config.semanticContext,pt.getPredicate());c=new ATNConfig({state:pt.target,semanticContext:newSemCtx},config)}else c=new ATNConfig({state:pt.target},config);return this.debug&&console.log("config from pred transition="+c),c},ParserATNSimulator.prototype.ruleTransition=function(config,t){this.debug&&console.log("CALL rule "+this.getRuleName(t.target.ruleIndex)+", ctx="+config.context);var returnState=t.followState,newContext=SingletonPredictionContext.create(config.context,returnState.stateNumber);return new ATNConfig({state:t.target,context:newContext},config)},ParserATNSimulator.prototype.getConflictingAlts=function(configs){var altsets=PredictionMode.getConflictingAltSubsets(configs);return PredictionMode.getAlts(altsets)},ParserATNSimulator.prototype.getConflictingAltsOrUniqueAlt=function(configs){var conflictingAlts=null;return configs.uniqueAlt!==ATN.INVALID_ALT_NUMBER?(conflictingAlts=new BitSet,conflictingAlts.add(configs.uniqueAlt)):conflictingAlts=configs.conflictingAlts,conflictingAlts},ParserATNSimulator.prototype.getTokenName=function(t){if(t===Token.EOF)return"EOF";if(null!==this.parser&&null!==this.parser.literalNames){if(!(t>=this.parser.literalNames.length))return this.parser.literalNames[t]+"<"+t+">";console.log(""+t+" ttype out of range: "+this.parser.literalNames),console.log(""+this.parser.getInputStream().getTokens())}return""+t},ParserATNSimulator.prototype.getLookaheadName=function(input){return this.getTokenName(input.LA(1))},ParserATNSimulator.prototype.dumpDeadEndConfigs=function(nvae){console.log("dead end configs: ");for(var decs=nvae.getDeadEndConfigs(),i=0;i<decs.length;i++){var c=decs[i],trans="no edges";if(c.state.transitions.length>0){var t=c.state.transitions[0];if(t instanceof AtomTransition)trans="Atom "+this.getTokenName(t.label);else if(t instanceof SetTransition){var neg=t instanceof NotSetTransition;trans=(neg?"~":"")+"Set "+t.set}}console.error(c.toString(this.parser,!0)+":"+trans)}},ParserATNSimulator.prototype.noViableAlt=function(input,outerContext,configs,startIndex){return new NoViableAltException(this.parser,input,input.get(startIndex),input.LT(1),configs,outerContext)},ParserATNSimulator.prototype.getUniqueAlt=function(configs){for(var alt=ATN.INVALID_ALT_NUMBER,i=0;i<configs.items.length;i++){var c=configs.items[i];if(alt===ATN.INVALID_ALT_NUMBER)alt=c.alt;else if(c.alt!==alt)return ATN.INVALID_ALT_NUMBER}return alt},ParserATNSimulator.prototype.addDFAEdge=function(dfa,from_,t,to){if(this.debug&&console.log("EDGE "+from_+" -> "+to+" upon "+this.getTokenName(t)),null===to)return null;if(to=this.addDFAState(dfa,to),null===from_||t<-1||t>this.atn.maxTokenType)return to;if(null===from_.edges&&(from_.edges=[]),from_.edges[t+1]=to,this.debug){var names=null===this.parser?null:this.parser.literalNames;console.log("DFA=\n"+dfa.toString(names))}return to},ParserATNSimulator.prototype.addDFAState=function(dfa,D){if(D==ATNSimulator.ERROR)return D;var hash=D.hashString(),existing=dfa.states[hash]||null;return null!==existing?existing:(D.stateNumber=dfa.states.length,D.configs.readOnly||(D.configs.optimizeConfigs(this),D.configs.setReadonly(!0)),dfa.states[hash]=D,this.debug&&console.log("adding new DFA state: "+D),D)},ParserATNSimulator.prototype.reportAttemptingFullContext=function(dfa,conflictingAlts,configs,startIndex,stopIndex){if(this.debug||this.retry_debug){var interval=new Interval(startIndex,stopIndex+1);console.log("reportAttemptingFullContext decision="+dfa.decision+":"+configs+", input="+this.parser.getTokenStream().getText(interval))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser,dfa,startIndex,stopIndex,conflictingAlts,configs)},ParserATNSimulator.prototype.reportContextSensitivity=function(dfa,prediction,configs,startIndex,stopIndex){if(this.debug||this.retry_debug){var interval=new Interval(startIndex,stopIndex+1);console.log("reportContextSensitivity decision="+dfa.decision+":"+configs+", input="+this.parser.getTokenStream().getText(interval))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser,dfa,startIndex,stopIndex,prediction,configs)},ParserATNSimulator.prototype.reportAmbiguity=function(dfa,D,startIndex,stopIndex,exact,ambigAlts,configs){if(this.debug||this.retry_debug){var interval=new Interval(startIndex,stopIndex+1);console.log("reportAmbiguity "+ambigAlts+":"+configs+", input="+this.parser.getTokenStream().getText(interval))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser,dfa,startIndex,stopIndex,exact,ambigAlts,configs)},exports.ParserATNSimulator=ParserATNSimulator;