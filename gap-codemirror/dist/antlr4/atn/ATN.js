/* gap-lint v1.0.0, Manuel Martins - Generated on 26-10-2016 */
function ATN(grammarType,maxTokenType){return this.grammarType=grammarType,this.maxTokenType=maxTokenType,this.states=[],this.decisionToState=[],this.ruleToStartState=[],this.ruleToStopState=null,this.modeNameToStartState={},this.ruleToTokenType=null,this.lexerActions=null,this.modeToStartState=[],this}var LL1Analyzer=require("./../LL1Analyzer").LL1Analyzer,IntervalSet=require("./../IntervalSet").IntervalSet;ATN.prototype.nextTokensInContext=function(s,ctx){var anal=new LL1Analyzer(this);return anal.LOOK(s,null,ctx)},ATN.prototype.nextTokensNoContext=function(s){return null!==s.nextTokenWithinRule?s.nextTokenWithinRule:(s.nextTokenWithinRule=this.nextTokensInContext(s,null),s.nextTokenWithinRule.readOnly=!0,s.nextTokenWithinRule)},ATN.prototype.nextTokens=function(s,ctx){return void 0===ctx?this.nextTokensNoContext(s):this.nextTokensInContext(s,ctx)},ATN.prototype.addState=function(state){null!==state&&(state.atn=this,state.stateNumber=this.states.length),this.states.push(state)},ATN.prototype.removeState=function(state){this.states[state.stateNumber]=null},ATN.prototype.defineDecisionState=function(s){return this.decisionToState.push(s),s.decision=this.decisionToState.length-1,s.decision},ATN.prototype.getDecisionState=function(decision){return 0===this.decisionToState.length?null:this.decisionToState[decision]};var Token=require("./../Token").Token;ATN.prototype.getExpectedTokens=function(stateNumber,ctx){if(stateNumber<0||stateNumber>=this.states.length)throw"Invalid state number.";var s=this.states[stateNumber],following=this.nextTokens(s);if(!following.contains(Token.EPSILON))return following;var expected=new IntervalSet;for(expected.addSet(following),expected.removeOne(Token.EPSILON);null!==ctx&&ctx.invokingState>=0&&following.contains(Token.EPSILON);){var invokingState=this.states[ctx.invokingState],rt=invokingState.transitions[0];following=this.nextTokens(rt.followState),expected.addSet(following),expected.removeOne(Token.EPSILON),ctx=ctx.parentCtx}return following.contains(Token.EPSILON)&&expected.addOne(Token.EOF),expected},ATN.INVALID_ALT_NUMBER=0,exports.ATN=ATN;