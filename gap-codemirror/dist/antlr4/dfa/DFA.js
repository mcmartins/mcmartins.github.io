/* gap-lint v1.0.0, Manuel Martins - Generated on 26-10-2016 */
function DFAStatesSet(){return this}function DFA(atnStartState,decision){return void 0===decision&&(decision=0),this.atnStartState=atnStartState,this.decision=decision,this._states=new DFAStatesSet,this.s0=null,this.precedenceDfa=!1,this}var DFAState=require("./DFAState").DFAState,ATNConfigSet=require("./../atn/ATNConfigSet").ATNConfigSet,DFASerializer=require("./DFASerializer").DFASerializer,LexerDFASerializer=require("./DFASerializer").LexerDFASerializer;Object.defineProperty(DFAStatesSet.prototype,"length",{get:function(){return Object.keys(this).length}}),DFA.prototype.getPrecedenceStartState=function(precedence){if(!this.precedenceDfa)throw"Only precedence DFAs may contain a precedence start state.";return precedence<0||precedence>=this.s0.edges.length?null:this.s0.edges[precedence]||null},DFA.prototype.setPrecedenceStartState=function(precedence,startState){if(!this.precedenceDfa)throw"Only precedence DFAs may contain a precedence start state.";precedence<0||(this.s0.edges[precedence]=startState)},DFA.prototype.setPrecedenceDfa=function(precedenceDfa){if(this.precedenceDfa!==precedenceDfa){if(this._states=new DFAStatesSet,precedenceDfa){var precedenceState=new DFAState(new ATNConfigSet);precedenceState.edges=[],precedenceState.isAcceptState=!1,precedenceState.requiresFullContext=!1,this.s0=precedenceState}else this.s0=null;this.precedenceDfa=precedenceDfa}},Object.defineProperty(DFA.prototype,"states",{get:function(){return this._states}}),DFA.prototype.sortedStates=function(){for(var keys=Object.keys(this._states),list=[],i=0;i<keys.length;i++)list.push(this._states[keys[i]]);return list.sort(function(a,b){return a.stateNumber-b.stateNumber})},DFA.prototype.toString=function(literalNames,symbolicNames){if(literalNames=literalNames||null,symbolicNames=symbolicNames||null,null===this.s0)return"";var serializer=new DFASerializer(this,literalNames,symbolicNames);return serializer.toString()},DFA.prototype.toLexerString=function(){if(null===this.s0)return"";var serializer=new LexerDFASerializer(this);return serializer.toString()},exports.DFA=DFA;