/* gap-lint v1.0.0, Manuel Martins - Generated on 26-10-2016 */
function ParserRuleContext(parent,invokingStateNumber){parent=parent||null,invokingStateNumber=invokingStateNumber||null,RuleContext.call(this,parent,invokingStateNumber),this.ruleIndex=-1,this.children=null,this.start=null,this.stop=null,this.exception=null}function InterpreterRuleContext(parent,invokingStateNumber,ruleIndex){return ParserRuleContext.call(parent,invokingStateNumber),this.ruleIndex=ruleIndex,this}var RuleContext=require("./RuleContext").RuleContext,Tree=require("./tree/Tree"),INVALID_INTERVAL=Tree.INVALID_INTERVAL,TerminalNode=Tree.TerminalNode,TerminalNodeImpl=Tree.TerminalNodeImpl,ErrorNodeImpl=Tree.ErrorNodeImpl,Interval=require("./IntervalSet").Interval;ParserRuleContext.prototype=Object.create(RuleContext.prototype),ParserRuleContext.prototype.constructor=ParserRuleContext,ParserRuleContext.prototype.copyFrom=function(ctx){this.parentCtx=ctx.parentCtx,this.invokingState=ctx.invokingState,this.children=null,this.start=ctx.start,this.stop=ctx.stop},ParserRuleContext.prototype.enterRule=function(listener){},ParserRuleContext.prototype.exitRule=function(listener){},ParserRuleContext.prototype.addChild=function(child){return null===this.children&&(this.children=[]),this.children.push(child),child},ParserRuleContext.prototype.removeLastChild=function(){null!==this.children&&this.children.pop()},ParserRuleContext.prototype.addTokenNode=function(token){var node=new TerminalNodeImpl(token);return this.addChild(node),node.parentCtx=this,node},ParserRuleContext.prototype.addErrorNode=function(badToken){var node=new ErrorNodeImpl(badToken);return this.addChild(node),node.parentCtx=this,node},ParserRuleContext.prototype.getChild=function(i,type){if(type=type||null,null===type)return this.children.length>=i?this.children[i]:null;for(var j=0;j<this.children.length;j++){var child=this.children[j];if(child instanceof type){if(0===i)return child;i-=1}}return null},ParserRuleContext.prototype.getToken=function(ttype,i){for(var j=0;j<this.children.length;j++){var child=this.children[j];if(child instanceof TerminalNode&&child.symbol.type===ttype){if(0===i)return child;i-=1}}return null},ParserRuleContext.prototype.getTokens=function(ttype){if(null===this.children)return[];for(var tokens=[],j=0;j<this.children.length;j++){var child=this.children[j];child instanceof TerminalNode&&child.symbol.type===ttype&&tokens.push(child)}return tokens},ParserRuleContext.prototype.getTypedRuleContext=function(ctxType,i){return this.getChild(i,ctxType)},ParserRuleContext.prototype.getTypedRuleContexts=function(ctxType){if(null===this.children)return[];for(var contexts=[],j=0;j<this.children.length;j++){var child=this.children[j];child instanceof ctxType&&contexts.push(child)}return contexts},ParserRuleContext.prototype.getChildCount=function(){return null===this.children?0:this.children.length},ParserRuleContext.prototype.getSourceInterval=function(){return null===this.start||null===this.stop?INVALID_INTERVAL:new Interval(this.start.tokenIndex,this.stop.tokenIndex)},RuleContext.EMPTY=new ParserRuleContext,InterpreterRuleContext.prototype=Object.create(ParserRuleContext.prototype),InterpreterRuleContext.prototype.constructor=InterpreterRuleContext,exports.ParserRuleContext=ParserRuleContext;